package message

// This file was auto-generated by goenum.exe
// Do not modify this file directly.
// The name of the original description file used to generate this one is ./goenum/MessageId.goenum
// The name of the template is ./goenum/goenum.template

import (
	"errors"
	"strings"
)

type MessageId int

const (
	MessageIdCount = 35
	MessageIdMaxIndex = int(MessageIdExit)
	MessageIdLastValue = MessageIdExit
)

const (
	MessageIdNone MessageId = iota
	MessageIdScreenResize
	MessageIdKey
	MessageIdMouse
	MessageIdMouseEnter
	MessageIdMouseMove
	MessageIdMouseExit
	MessageIdMouseClick
	MessageIdMouseDown
	MessageIdMouseUp
	MessageIdKeyPress
	MessageIdFocus
	MessageIdFocusNext
	MessageIdFocusPrevious
	MessageIdFocusParent
	MessageIdFocusChild
	MessageIdSetModeNormal
	MessageIdSetModeMove
	MessageIdSetModeResize
	MessageIdSetTheme
	MessageIdThemeChanged
	MessageIdMove
	MessageIdMinimize
	MessageIdRestoreSize
	MessageIdMaximize
	MessageIdResize
	MessageIdSetPosition
	MessageIdSetSize
	MessageIdZOrderUp
	MessageIdZOrderDown
	MessageIdZOrderTop
	MessageIdZOrderBottom
	MessageIdSelectMenuItem
	MessageIdClearSelectedMenuItems
	MessageIdExit
)

func (v MessageId) String() string {
	return [...]string{
		"MessageIdNone",
		"MessageIdScreenResize",
		"MessageIdKey",
		"MessageIdMouse",
		"MessageIdMouseEnter",
		"MessageIdMouseMove",
		"MessageIdMouseExit",
		"MessageIdMouseClick",
		"MessageIdMouseDown",
		"MessageIdMouseUp",
		"MessageIdKeyPress",
		"MessageIdFocus",
		"MessageIdFocusNext",
		"MessageIdFocusPrevious",
		"MessageIdFocusParent",
		"MessageIdFocusChild",
		"MessageIdSetModeNormal",
		"MessageIdSetModeMove",
		"MessageIdSetModeResize",
		"MessageIdSetTheme",
		"MessageIdThemeChanged",
		"MessageIdMove",
		"MessageIdMinimize",
		"MessageIdRestoreSize",
		"MessageIdMaximize",
		"MessageIdResize",
		"MessageIdSetPosition",
		"MessageIdSetSize",
		"MessageIdZOrderUp",
		"MessageIdZOrderDown",
		"MessageIdZOrderTop",
		"MessageIdZOrderBottom",
		"MessageIdSelectMenuItem",
		"MessageIdClearSelectedMenuItems",
		"MessageIdExit",
	}[v]
}

func MessageIdFromString(s string) (MessageId, error) {
	var suffix string
	if strings.HasPrefix(s, "MessageId") {
		l := len("MessageId")
		if l < len(s) {
			suffix = s[l:]
		}
	} else {
		suffix = s
	}
	switch suffix {
	case "None":
		return MessageIdNone, nil
	case "ScreenResize":
		return MessageIdScreenResize, nil
	case "Key":
		return MessageIdKey, nil
	case "Mouse":
		return MessageIdMouse, nil
	case "MouseEnter":
		return MessageIdMouseEnter, nil
	case "MouseMove":
		return MessageIdMouseMove, nil
	case "MouseExit":
		return MessageIdMouseExit, nil
	case "MouseClick":
		return MessageIdMouseClick, nil
	case "MouseDown":
		return MessageIdMouseDown, nil
	case "MouseUp":
		return MessageIdMouseUp, nil
	case "KeyPress":
		return MessageIdKeyPress, nil
	case "Focus":
		return MessageIdFocus, nil
	case "FocusNext":
		return MessageIdFocusNext, nil
	case "FocusPrevious":
		return MessageIdFocusPrevious, nil
	case "FocusParent":
		return MessageIdFocusParent, nil
	case "FocusChild":
		return MessageIdFocusChild, nil
	case "SetModeNormal":
		return MessageIdSetModeNormal, nil
	case "SetModeMove":
		return MessageIdSetModeMove, nil
	case "SetModeResize":
		return MessageIdSetModeResize, nil
	case "SetTheme":
		return MessageIdSetTheme, nil
	case "ThemeChanged":
		return MessageIdThemeChanged, nil
	case "Move":
		return MessageIdMove, nil
	case "Minimize":
		return MessageIdMinimize, nil
	case "RestoreSize":
		return MessageIdRestoreSize, nil
	case "Maximize":
		return MessageIdMaximize, nil
	case "Resize":
		return MessageIdResize, nil
	case "SetPosition":
		return MessageIdSetPosition, nil
	case "SetSize":
		return MessageIdSetSize, nil
	case "ZOrderUp":
		return MessageIdZOrderUp, nil
	case "ZOrderDown":
		return MessageIdZOrderDown, nil
	case "ZOrderTop":
		return MessageIdZOrderTop, nil
	case "ZOrderBottom":
		return MessageIdZOrderBottom, nil
	case "SelectMenuItem":
		return MessageIdSelectMenuItem, nil
	case "ClearSelectedMenuItems":
		return MessageIdClearSelectedMenuItems, nil
	case "Exit":
		return MessageIdExit, nil
	}
	return MessageId(0), errors.New("String does not correspond to any existing MessageId values")
}
